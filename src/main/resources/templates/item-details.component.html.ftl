<section  class="spinner-container"  *ngIf="isLoadingResults">
    <mat-spinner></mat-spinner>
</section>
<div *ngIf="item" class="list-container">
	<div class="top-breadcrumb">
      <h1 class="template-title">{{title}}</h1>
      <div class="fc-row">
        <div class="fc-col-sm-12">
          <ul class="breadcrumb">
            <li><a [routerLink]="['/dashboard']"><i class="material-icons">
                  home
                </i> &nbsp;Dashboard</a></li>
            <li><a (click)="onBack()">[=ClassName]</a></li>
            <li><a>{{idParam}}</a></li>
          </ul>
        </div>
        
      </div>
    </div>
	<mat-card class="card">
		<mat-card-content>
			<form [formGroup]="itemForm" #itemNgForm="ngForm" (ngSubmit)="onSubmit()" class="item-form">
			<#list Fields as key,value>
			<#-- to exclude the duplicate fields(join columns) -->
			<#assign isJoinColumn = false>
			<#if Relationship?has_content>
			<#list Relationship as relationKey, relationValue>
			<#if relationValue.relation == "ManyToOne" || (relationValue.relation == "OneToOne" && relationValue.isParent == false)>
			<#list relationValue.joinDetails as joinDetails>
            <#if joinDetails.joinEntityName == relationValue.eName>
            <#if joinDetails.joinColumn??>
            <#if joinDetails.joinColumn == key>
            <#assign isJoinColumn = true>
            </#if>
            </#if>
			</#if>
			</#list>
			</#if>
			</#list>
			</#if>
			<#-- to exclude the password field in case of user provided "User" table -->
			<#assign isPasswordField = false>
			<#if AuthenticationType == "database" && ClassName == AuthenticationTable>  
    		<#if AuthenticationFields?? && AuthenticationFields.Password.fieldName == value.fieldName>
			<#assign isPasswordField = true>
			</#if>
			</#if>
            <#if isJoinColumn == false && isPasswordField == false>  
			<#if value.fieldType?lower_case == "boolean">
				<mat-checkbox formControlName="[=value.fieldName]">[=value.fieldName]</mat-checkbox>
			<#elseif value.fieldType?lower_case == "date">
				<mat-form-field>
					<input formControlName="[=value.fieldName]" matInput [matDatepicker]="[=value.fieldName]Picker" placeholder="Enter [=value.fieldName]">
					<mat-datepicker-toggle matSuffix [for]="[=value.fieldName]Picker"></mat-datepicker-toggle>
					<mat-datepicker #[=value.fieldName]Picker></mat-datepicker>
					<#if value.isNullable == false>
					<mat-error *ngIf="!itemForm.get('[=value.fieldName]').valid && itemForm.get('[=value.fieldName]').touched">{{'GENERAL.ERRORS.REQUIRED' | translate}}</mat-error>
					</#if>
				</mat-form-field>
			<#elseif value.fieldType?lower_case == "string">
				<mat-form-field>
					<input formControlName="[=value.fieldName]" matInput placeholder="Enter [=value.fieldName]">
					<#if value.isNullable == false>
					<mat-error *ngIf="!itemForm.get('[=value.fieldName]').valid && itemForm.get('[=value.fieldName]').touched">{{'GENERAL.ERRORS.REQUIRED' | translate}}</mat-error>
				    </#if>
				</mat-form-field>
			<#elseif !value.isAutogenerated && (value.fieldType?lower_case == "long" ||  value.fieldType?lower_case == "integer" ||  value.fieldType?lower_case == "short" ||  value.fieldType?lower_case == "double")>
				<mat-form-field>
					<input type="number" formControlName="[=value.fieldName]" matInput placeholder="Enter [=value.fieldName]">
					<#if value.isNullable == false>
					<mat-error *ngIf="!itemForm.get('[=value.fieldName]').valid && itemForm.get('[=value.fieldName]').touched">{{'GENERAL.ERRORS.REQUIRED' | translate}}</mat-error>
				    </#if>
				</mat-form-field>
			</#if>
   			</#if>
			</#list>
			
				<mat-form-field *ngFor="let association of parentAssociations">
          <input type="text" matInput formControlName="{{association.descriptiveField}}"
            placeholder="{{association.table}}" aria-label="Number" [matAutocomplete]="auto"
            (click)="selectAssociation(association)" required>
          <mat-autocomplete (optionSelected)="onAssociationOptionSelected($event, association)" autoActiveFirstOption #auto="matAutocomplete" (optionsScroll)="onPickerScroll(association)">
            <mat-option *ngFor="let option of association.data" [value]="option">
              {{option[association.referencedDescriptiveField]}}
            </mat-option>
          </mat-autocomplete>
        </mat-form-field>
				
			</form>
			<br>
        <br>
        <div class="association-div full-width">
          <div class="fc-row">
            <div class="fc-col-sm-6">
                <button mat-button *ngFor="let association of childAssociations"
                  (click)="openChildDetails(association)" class="btn btn-link">
                  {{association.table}}&nbsp;<mat-icon>link</mat-icon>
                </button>
            </div>
            <div class="fc-col-sm-6 fc-text-right">
                <button name="back" mat-raised-button color="basic" (click)="onBack()"> {{'GENERAL.ACTIONS.CANCEL' | translate}} </button> 
                <button name="save" mat-raised-button color="primary" [disabled]="!itemForm.valid || loading<#if AuthenticationType!="none"> || !IsUpdatePermission</#if>" (click)="itemNgForm.ngSubmit.emit()">
                  {{'GENERAL.ACTIONS.SAVE' | translate}}
                </button>
            </div>
          </div>            
        </div>
        <br>
        <br>
		</mat-card-content>
	</mat-card>
</div>